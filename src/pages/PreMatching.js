import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import Header from '../components/Header';
import Footer from '../components/Footer';
import '../styles/PreMatching.css';
import logo from '../assets/shuttleplay_main_logo.png';
import purpleLogo from '../assets/shuttleplay_t_purple_logo.png';
import AutoGameRoomMatching from './AutoGameRoomMatching';

function PreMatching() {
  const [step, setStep] = useState('selectMode');
  const [selectedMatch, setSelectedMatch] = useState('');
  const [selectedMode, setSelectedMode] = useState('동네매칭');
  const [selectedDate, setSelectedDate] = useState('');
  const [selectedType, setSelectedType] = useState('전체');
  const [filtered, setFiltered] = useState(false);
  const [liked, setLiked] = useState(Array(16).fill(false));
  const [showAutoGenerated, setShowAutoGenerated] = useState(false);

  const sampleVenues = [
    '삼성현공원 배드민턴장',
    '옥산배드민턴장',
    '경일대 체육관',
    '영남대 실내체육관',
    '계명대 스포츠센터',
    '경북대 종합체육관'
  ];

  const gameRooms = Array.from({ length: 16 }, (_, index) => ({
    id: index + 1,
    title: ['영남대', '대구대', '계명대', '한동대', '경북대', '포스텍', '안동대', '구미대', '경일대', '대경대', '위덕대', '경운대', '대구한의대', '상지대', '경북전문', '경산대'][index],
    description: '경산시',
    distance: `${300 + index * 10}m`,
    date: '2025-06-05',
    location: sampleVenues[index % sampleVenues.length],
    players: `${2 + (index % 4) * 2}명`,
    gameType: (index === 0 || index === 3 || index === 5) ? '복식 (2v2)' : '단식 (1v1)'
  }));

  const toggleLike = (i) => {
    const updated = [...liked];
    updated[i] = !updated[i];
    setLiked(updated);
  };

  const handleFilterApply = () => {
    setFiltered(true);
  };

  const handleStartMatching = () => {
    setShowAutoGenerated(true);
    setStep('autoInput');
  };

  const handleAutoMatchClose = () => {
    setShowAutoGenerated(false);
    setStep('selectMode');
  };

  const filteredGameRooms = gameRooms.filter((room) => {
    if (selectedType === '전체') return true;
    if (selectedType === '단식') return room.gameType.includes('단식');
    if (selectedType === '복식') return room.gameType.includes('복식');
    return true;
  });

  return (
    <div className="pre-matching-wrapper">
      <Header />

      {step === 'selectMode' && (
        <div className="select-mode-card">
          <img src={logo} alt="ShuttlePlay 로고" className="card-logo" />
          <div className="card-content">
            <h2>매칭 방식을 선택해주세요!</h2>
            <div className="select-mode-buttons">
              <button onClick={() => { setSelectedMatch('자동'); handleStartMatching(); }}>자동 매칭</button>
              <button onClick={() => { setSelectedMatch('수동'); setStep('filter'); }}>수동 매칭</button>
            </div>
          </div>
        </div>
      )}

      {step === 'autoInput' && showAutoGenerated && (
        <AutoGameRoomMatching onClose={handleAutoMatchClose} />
      )}

      {step === 'filter' && (
        <div className="pre-matching-content">
          <div className="filter-bar">
            <div className="filter-items">
              <div className="filter-item">
                <span>매칭유형</span>
                <select value={selectedMode} onChange={(e) => setSelectedMode(e.target.value)}>
                  <option>동네매칭</option>
                  <option>구장매칭</option>
                </select>
              </div>
              <div className="divider"></div>
              <div className="filter-item">
                <span>날짜</span>
                <input type="date" value={selectedDate} onChange={(e) => setSelectedDate(e.target.value)} />
              </div>
              <div className="divider"></div>
              <div className="filter-item">
                <span>종목</span>
                <select value={selectedType} onChange={(e) => setSelectedType(e.target.value)}>
                  <option>전체</option>
                  <option>단식</option>
                  <option>복식</option>
                </select>
              </div>
            </div>
            <button className="filter-apply-btn" onClick={handleFilterApply}>필터적용</button>
          </div>

          {!filtered && (
            <div className="pre-matching-logo-placeholder">
              <img src={purpleLogo} alt="셔틀플레이 로고" />
            </div>
          )}

          {filtered && (
            <div className="card-grid">
              {filteredGameRooms.map((room, i) => (
                <div className="card" key={room.id}>
                  <div className="card-thumbnail">
                    <div className="thumbnail-text">1/5</div>
                    <button className={`heart-button ${liked[i] ? 'liked' : ''}`} onClick={() => toggleLike(i)}>❤︎</button>
                  </div>
                  <div className="card-body">
                    <h4>{room.title}</h4>
                    <p>{room.description}</p>
                    <div className="alt-info">
                      <div>거리: {room.distance}</div>
                      <div>날짜: {room.date}</div>
                      <div>위치: {selectedMode === '동네매칭' ? room.location : '대학 실내체육관'}</div>
                      <div>인원: {selectedMode === '동네매칭' ? room.players : '8명'}</div>
                      <div>종목: {room.gameType}</div>
                    </div>
                    <div className="card-bottom">
                      <Link
                        to={`/gameroom/${room.id}`}
                        onClick={() => localStorage.setItem('selectedRoom', JSON.stringify(room))}
                      >
                        <button className="enter-btn">입장</button>
                      </Link>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      )}

      <Footer />
    </div>
  );
}

export default PreMatching;
